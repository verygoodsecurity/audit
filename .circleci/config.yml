version: 2.1

parameters:
  working_directory:
    description: "The working directory for building the app."
    type: string
    default: "~/app"
  aws_account_id:
    description: "The AWS account ID."
    type: string
    default: "883127560329"
  aws_profile:
    description: "The VGS profile for accessing AWS to find the S3 buckets with Maven artifacts."
    type: string
    default: "dev/vault"
  aws_region:
    description: "The AWS region where the S3 buckets with Maven artifacts are."
    type: string
    default: "us-west-2"
  test_results_dir:
    description: "The directory to put test results into."
    type: string
    default: "/tmp/test-results"

job-defaults: &job-defaults
  working_directory: << pipeline.parameters.working_directory >>
  environment:
    - TEST_RESULTS: << pipeline.parameters.test_results_dir >>
    - AWS_DEFAULT_REGION: << pipeline.parameters.aws_region >>
    - AWS_REGION: << pipeline.parameters.aws_region >>
    - AWS_ACCOUNT_ID: << pipeline.parameters.aws_account_id >>
    - AWS_PROFILE: << pipeline.parameters.aws_profile >>

commands: 
  setup_env:
    description: "Set up AWS access"
    steps:
      - run:
          name: "Setup AWS access"
          command: "./.circleci/setup-aws-config.sh"

jobs:
  build-test:
    machine: true
    working_directory: << pipeline.parameters.working_directory >>
    environment:
      TEST_RESULTS: << pipeline.parameters.test_results_dir >>
    steps:
      - checkout
      - restore_cache:
          key: track-{{ checksum "pom.xml" }}
      - setup_env
      - run: VERSION=$CIRCLE_SHA1 docker-compose run build-test
      - save_cache:
          key: track-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2
      - persist_to_workspace:
          root: .
          paths: "*"

  deploy-snapshot:
    machine:
      enabled: true
    <<: *job-defaults
    steps:
      - attach_workspace:
          at: << pipeline.parameters.working_directory >>
      - setup_env
      - run:
          name: Deploy snapshot
          command: |
            unset AWS_ACCESS_KEY_ID
            unset AWS_SECRET_ACCESS_KEY
            docker-compose run deploy-snapshot

  deploy-release:
    machine:
      enabled: true
    <<: *job-defaults
    steps:
      - attach_workspace:
          at: << pipeline.parameters.working_directory >>
      - setup_env
      - add_ssh_keys:
          fingerprints:
            - "41:9b:7b:a7:32:3e:c4:da:69:4e:c6:64:9a:5a:12:78"
      - run:
          name: Deploy release
          command: |
            unset AWS_ACCESS_KEY_ID
            unset AWS_SECRET_ACCESS_KEY
            git config user.name "circleci"
            git config user.email "dev@vgs.io"
            docker-compose run deploy-release
            git push origin master

  validate-production:
    <<: *job-defaults
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - setup_remote_docker
      - run:
          name: Validate a production build
          command: |
            docker login -u="$QUAY_DOCKER_LOGIN" -p="$QUAY_DOCKER_LOGIN_PASSWORD" quay.io
            docker run -e GITHUB_API_TOKEN=$GITHUB_API_TOKEN quay.io/verygoodsecurity/ghch:$GHCH_VERSION validate --repo-name verygoodsecurity/$CIRCLE_PROJECT_REPONAME --tag-name $CIRCLE_TAG --tag-regex "(.*)"

  complete-production:
    <<: *job-defaults
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - setup_remote_docker
      - run:
          name: Complete a production build
          command: |
            docker login -u="$QUAY_DOCKER_LOGIN" -p="$QUAY_DOCKER_LOGIN_PASSWORD" quay.io
            docker run -e GITHUB_API_TOKEN=$GITHUB_API_TOKEN -e CLUBHOUSE_API_TOKEN=$CLUBHOUSE_API_TOKEN quay.io/verygoodsecurity/ghch:$GHCH_VERSION complete --repo-name verygoodsecurity/$CIRCLE_PROJECT_REPONAME --tag-name $CIRCLE_TAG --tag-regex "(.*)"

workflows:
  build-test-and-deploy:
    jobs:
      - build-test:
          context: artifact-publisher
          filters:
            tags:
              only: /.*/
      - deploy-snapshot:
          context: artifact-publisher
          requires:
            - build-test
          filters:
            branches:
              only: master
      - deploy-release:
          context: artifact-publisher
          requires:
            - build-test
            - validate-production
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - validate-production:
          context: ghch
          filters:
            tags:
              only: /^\d+\.\d+\.\d+(?:-\w+){0,1}$/
            branches:
              ignore: /.*/
      - complete-production:
          context: ghch
          requires:
            - deploy-release
          filters:
            tags:
              only: /^\d+\.\d+\.\d+(?:-\w+){0,1}$/
            branches:
              ignore: /.*/
