version: 2.1

parameters:
  aws_account_id:
    description: ""
    type: string
    default: "883127560329"
  aws_profile:
    description: ""
    type: string
    default: "dev/vault"
  aws_region:
    description: ""
    type: string
    default: "us-west-2"
  aws_role:
    description: ""
    type: string
    default: "arn:aws:iam::883127560329:role/VGSStageDeploy"
  cache_key_prefix:
    description: ""
    type: string
    default: "track"

commands:
  maven:
    description: "Run Maven"
    parameters:
      goals:
        description: "The Maven goals to run."
        type: string
        default: "clean verify site"
      executable:
        description: "The Maven executable."
        type: string
        default: "mvn"
    steps:
      - run:
          command: << parameters.executable >> << parameters.goals >>

jobs:
  "setup":
    description: "make Maven configuration files"
    docker:
      - image: "maven:3.6-openjdk-8"
    environment:
      AWS_ACCOUNT_ID: << pipeline.parameters.aws_account_id >>
      AWS_PROFILE: << pipeline.parameters.aws_profile >>
      AWS_DEFAULT_REGION: << pipeline.parameters.aws_region >>
      AWS_REGION: << pipeline.parameters.aws_region >>
    steps:
      - run:
          name: "Generate Maven settings."
          command: |
            #!/usr/bin/env bash
            mkdir -p ~/.m2
            echo "
            <?xml version=\"1.0\" encoding=\"UTF-8\"?>
            <settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\"
            	xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"
            	xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\">
                <interactiveMode>false</interactiveMode>
            	<proxies></proxies>
            	<servers>
                    <server>
                        <id>verygood-release-repo</id>
                        <username>$AWS_ACCESS_KEY_ID</username>
                        <password>$AWS_SECRET_ACCESS_KEY</password>
                    </server>
                    <server>
                        <id>verygood-snapshot-repo</id>
                        <username>$AWS_ACCESS_KEY_ID</username>
                        <password>$AWS_SECRET_ACCESS_KEY</password>
                    </server>
            	</servers>
            	<mirrors>
                </mirrors>
            	<activeProfiles>
                    <activeProfile>very-good-security</activeProfile>
            	</activeProfiles>
            	<profiles>
            		<profile>
            			<id>very-good-security</id>
            			<activation>
            				<activeByDefault>false</activeByDefault>
            			</activation>
            			<repositories>
            				<repository>
            					<id>verygood-release-repo</id>
            					<name>Very Good Release Repository</name>
            					<url>s3://vault-dev-01-audits-01-artifact-19k6160zpr44j/software/release/</url>
            					<releases>
            						<enabled>true</enabled>
            					</releases>
            					<snapshots>
            						<enabled>false</enabled>
            					</snapshots>
            				</repository>
            				<repository>
            					<id>verygood-snapshot-repo</id>
            					<name>Very Good Snapshot Repository</name>
            					<url>s3://vault-dev-01-audits-01-artifact-19k6160zpr44j/software/snapshot/</url>
            					<releases>
            						<enabled>false</enabled>
            					</releases>
            					<snapshots>
            						<enabled>true</enabled>
            					</snapshots>
            				</repository>
            			</repositories>
            			<pluginRepositories>
            				<pluginRepository>
            					<id>bintray-vg-vgs-oss-plugins</id>
            					<url>https://dl.bintray.com/vg/vgs-oss</url>
            					<snapshots>
            						<enabled>true</enabled>
            					</snapshots>
            				</pluginRepository>
            			</pluginRepositories>
            		</profile>
            	</profiles>
            </settings>
            " >> ~/.m2/settings.xml
      - run:
          name: "Generate AWS credentials file"
          command: |
            #!/usr/bin/env bash
            mkdir -p ~/.aws
            echo "
            [default]
            region = << pipeline.parameters.aws_region >>
            aws_access_key_id = $AWS_ACCESS_KEY_ID
            aws_secret_access_key = $AWS_SECRET_ACCESS_KEY

            [dev/vault]
            region = << pipeline.parameters.aws_region >>
            role_arn = << pipeline.parameters.aws_role >>
            source_profile = default
            " >> ~/.aws/credentials
      - persist_to_workspace:
          root: "~"
          paths:
            - ".m2"
            - ".aws"
  "build":
    description: "foo"
    docker:
      - image: "maven:3.6-openjdk-8"
    environment:
      AWS_ACCOUNT_ID: << pipeline.parameters.aws_account_id >>
      AWS_PROFILE: << pipeline.parameters.aws_profile >>
      AWS_DEFAULT_REGION: << pipeline.parameters.aws_region >>
      AWS_REGION: << pipeline.parameters.aws_region >>
    steps:
      - attach_workspace:
          at: "~"
      - checkout:
          path: "."
      - restore_cache:
          name: "Restoring Cache"
          keys:
            - maven-<< pipeline.parameters.cache_key_prefix >>-{{ checksum "pom.xml" }}
            - "maven-<< pipeline.parameters.cache_key_prefix >>"
            - "maven"
      - maven:
          goals: "dependency:go-offline"
      - maven:
          goals: "clean verify"
      - store_test_results:
          path: "target/surefire-reports"
      - maven:
          goals: "site"
      - store_artifacts:
          path: "target"
      - maven:
          goals: "deploy"
      - save_cache:
          name: "Saving Cache"
          when: "always"
          key: maven-<< pipeline.parameters.cache_key_prefix >>-{{ checksum "pom.xml" }}
          paths:
            - "~/.m2/repository"

workflows:
  version: 2
  "java-build":
    jobs:
      - "setup":
          context: artifact-publisher
      - "build":
          requires:
            - "setup"
